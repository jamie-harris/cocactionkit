WITH donations AS (
SELECT DISTINCT
	transaction_id
  , user_id
  , mailing_id
  , TO_DATE(core_mailing.send_date, 'YYYY-MM-DD') AS mailing_date -- converting field to date data type
  , core_mailing.expected_send_count AS mailing_send_count

-- Below fields to filter on
  , gift_date
  , total
  , recurring
  , first_donation
  , reactivated_former_recurring
    
FROM coc_reporting.donation_base_20210202
LEFT JOIN coc_ak.core_mailing
  ON donation_base_20210202.mailing_id = core_mailing.id
  
WHERE clean_source = 'email' -- Including donations from emails only
  AND gift_date >= '2018-01-01'
)


, add_tags AS (
SELECT 
  donations.*
  , core_mailing_tags.tag_id
  , core_tag.name AS tag_name
  , CASE
      WHEN core_tag.name LIKE '*%' THEN 'Issue'
      WHEN core_tag.name LIKE '@%' THEN 'Department'
      WHEN core_tag.name LIKE 'Camp%' THEN 'Campaign'
      WHEN core_tag.name LIKE 'CAMP%' THEN 'Campaign'
      ELSE NULL
    END AS tag_type

FROM donations  
LEFT JOIN coc_ak.core_mailing_tags
	ON donations.mailing_id = core_mailing_tags.mailing_id
LEFT JOIN coc_ak.core_tag
	ON core_mailing_tags.tag_id = core_tag.id

WHERE core_tag.name LIKE '*%'
  OR core_tag.name LIKE '@%'
  OR core_tag.name LIKE 'Camp%'
  OR core_tag.name LIKE 'CAMP%'
)


 --Code for adding mailer entity is finished. Want input on structure before fully integrating.
, add_entity AS (
SELECT
  add_tags.tag_id
  , core_tag.name AS mailer_entity
  , COUNT(core_tag.name) AS count_entity
FROM add_tags
LEFT JOIN coc_ak.core_mailing_tags
  ON core_mailing_tags.mailing_id = add_tags.mailing_id
LEFT JOIN coc_ak.core_tag
  ON core_mailing_tags.tag_id = core_tag.id

WHERE core_tag.name LIKE '[%]' -- Notation for entity tags: PAC, c3, c4
  AND add_tags.tag_id IS NOT NULL

GROUP BY 1,2
)

, add_entity2 AS (
SELECT
  add_entity.tag_id
  , add_entity.mailer_entity
FROM add_entity
JOIN (SELECT add_entity.tag_id, MAX(add_entity.count_entity) AS max_count_entity
        FROM add_entity
        GROUP BY add_entity.tag_id) 
      AS subquery
  ON add_entity.tag_id = subquery.tag_id
  AND add_entity.count_entity = subquery.max_count_entity
)


, isolate_dates AS (
SELECT DISTINCT
  tag_id
  , FIRST_VALUE (mailing_date IGNORE NULLS) OVER (PARTITION BY tag_id ORDER BY mailing_date ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_mailer_sent_date
  , LAST_VALUE (mailing_date IGNORE NULLS) OVER (PARTITION BY tag_id ORDER BY mailing_date ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS most_recent_mailer_sent_date
FROM add_tags
)

, calc_metrics AS (
SELECT
	tag_id
	, tag_name
	, tag_type
	, COUNT(DISTINCT mailing_id) AS number_mailers
  , SUM (mailing_send_count) AS emails_sent_out
	, COUNT(transaction_id) AS count_donations
	, SUM(total) AS total_donation_dollars
FROM add_tags
GROUP BY 1,2,3
)

SELECT 
  calc_metrics.*
  , first_mailer_sent_date
  , most_recent_mailer_sent_date
  , add_entity2.mailer_entity
FROM calc_metrics
LEFT JOIN isolate_dates
  ON calc_metrics.tag_id = isolate_dates.tag_id
LEFT JOIN add_entity2
  ON add_entity2.tag_id = calc_metrics.tag_id